1. Инициализация репозитория:
Если вы еще не инициализировали Git-репозиторий, выполните команду в каталоге вашего проекта:

git init

2. Добавление файлов в индекс:
Выберите файлы, которые вы хотите включить в коммит, и добавьте их в индекс:

git add file1 file2

2.1 Или добавьте все измененные файлы:

git add .

3. Создание коммита:
Теперь создайте коммит с вашими изменениями:

git commit -m "Ваш комментарий к комиту здесь"

4. Привязка к удаленному репозиторию на GitHub:
Если вы еще не связали ваш локальный репозиторий с репозиторием на GitHub, выполните:

git remote add origin ВАШ_URL_РЕПОЗИТОРИЯ_НА_GITHUB

5. Привязка к удаленному репозиторию на GitHub:
Если вы еще не связали ваш локальный репозиторий с репозиторием на GitHub, выполните:

git push -u origin main    (или master)

6. Получите изменения из удаленного репозитория:
Выполните команду:

git pull origin main

7. Клонирование репозитория:
Эта команда клонирует репозиторий с GitHub на ваш компьютер:

git clone ВАШ_URL_РЕПОЗИТОРИЯ_НА_GITHUB

8. Создание новой ветки

git branch название_новой_ветки

9. git branch название_новой_ветки

git checkout название_новой_ветки

10. # Или используйте более современный синтаксис (Git версии 2.23 и выше)
# git switch -c название_новой_ветки

11. Отправьте изменения на удаленный репозиторий (если это необходимо):

git push origin название_новой_ветки

12. Удалите новую ветку ЛОКАЛЬНО но не УДАЛЕННО

git branch -d название_новой_ветки   (# Если ветка не была слита с другими изменениями, и вы хотите удалить её насильно
                                      # git branch -D название_новой_ветки)

13. Для удаления удаленных (remote) веток в Git, используйте команду git push с опцией --delete

git push origin --delete название_удаленной_ветки

14. Посмотреть локальные ветки:

git branch

15. Если возникают конфликты при слиянии, Git попросит вас их разрешить. После разрешения конфликтов используйте:
как правило это нужно делать когда пишется ветка не main а (main|MERGING)    
git merge --continue   <<<<<<а потом заного git add . > git commir -m "" > git push origim main > git status (проверка) 

